name: IOS Fastlane with TestFlight

on:
  push:
    branches:
      - feature/ci-cd_github-actions
    pull_request:
      - development

jobs:
  distribute_to_testflight:
    runs-on: macos-latest
    env: 
      DEVELOPER_APP_ID: ${{ secrets.DEVELOPER_APP_ID }}
      DEVELOPER_APP_IDENTIFIER: ${{ secrets.DEVELOPER_APP_IDENTIFIER }}
      DEVELOPER_PORTAL_TEAM_ID: ${{ secrets.DEVELOPER_PORTAL_TEAM_ID }}
      FASTLANE_APPLE_ID: ${{ secrets.FASTLANE_APPLE_ID }}
      FASTLANE_ITC_TEAM_ID: ${{ secrets.FASTLANE_ITC_TEAM_ID }}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
      PROVISIONING_PROFILE_SPECIFIER: '${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}'
      PROVISIONING_PROFILE_ID: '${{ secrets.PROVISIONING_PROFILE_ID }}'
      TEMP_KEYCHAIN_PASSWORD: '${{ secrets.TEMP_KEYCHAIN_PASSWORD }}'
      TEMP_KEYCHAIN_USER: '${{ secrets.TEMP_KEYCHAIN_USER }}'
      ASC_KEY_ID: '${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}'
      ASC_ISSUER_ID: '${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}'
      ASC_KEY: '${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}'
      SIGNING_KEY_PASSWORD: '${{ secrets.IOS_DIST_SIGNING_KEY_PASSWORD }}'
      SIGNING_KEY_FILE_PATH: 'signing-cert.p12'
      FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
      FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
      ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
      TEAM_ID: ${{ secrets.TEAM_ID }}


    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Setup SSH for Match
        run: |
          mkdir -p ~/.ssh
          echo -e "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3.4"
          bundler-cache: true
          working-directory: ios

      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Setup Flutter Version Management CLI (FVM)
        uses: flutter-actions/setup-fvm@v1

      - name: Install Flutter SDK (Project Version)
        run: |
          FLUTTER_VERSION=$(cat .fvm/fvm_config.json | grep flutterSdkVersion | cut -d '"' -f 4)
          echo "Using Flutter version: $FLUTTER_VERSION"
          fvm install $FLUTTER_VERSION
          fvm use $FLUTTER_VERSION --force

      - name: Print Flutter SDK version
        run: fvm flutter --version

      - name: Decode signing certificate into a file
        run: |
          echo $CERTIFICATE_BASE64 | base64 --decode > signing-cert.p12
        env:
          CERTIFICATE_BASE64: ${{ secrets.IOS_DIST_SIGNING_KEY }}

      - name: Install CocoaPods dependencies
        run: |
          fvm flutter precache --ios
          cd ios
          pod install

      - name: Install Fastlane dependencies
        run: |
          cd ios
          bundle install

      - name: Build and Distribute App to TestFlight
        run: |
          cd ios
          bundle exec fastlane ios testflight_distribution
